headline,mainEntityOfPage,image,datePublished,dateModified,author,media_en,media_jp,str_count,body,images,external_links
奥村茉実「ロックマン2」に挑戦。エアーマンは倒せた（PC Watch）,https://news.yahoo.co.jp/articles/476bbc7403bc571091f293d5ed69011b4ec05894,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240203-00000019-imppcw-000-1-view.jpg?exp=10800,2024-02-03T08:03:32+09:00,2024-02-03T08:03:32+09:00,PC Watch,imppcw,PC Watch,3308,"\n写真：PC Watch\nみなさんこんにちは、奥村茉実です! 今週からは新しいゲームに挑戦します! 「ロックマン クラシックス コレクション」に入っているシリーズ2作目の「ロックマン2 Dr.ワイリーの謎」です。ファミコン版は1988年に発売され、現在Steamにて2,547円で購入可能です。\n【画像】レトロゲームのプレイにはマウスコンピューターさんの「G-Tune E4-I7G60DB-B」を利用させていただいています。主な仕様は、Core i7-12650H、メモリ16GB、GeForce RTX 4060 Laptop、SSD 500GB、14型フルHD/144Hz液晶を搭載しています\nこれまでしばらく逆転裁判で頭を使ってきたので、ちょっとここらでアクションゲームをという感じです。前作は難しいと言われながらもなんとか全クリしました。アクションは苦手な方ではないと思うので、今回も1週1ステージクリアくらいのペースでやっていけたらなと。個人的には1が難しかったので、2は楽だと思いたい(笑)。\n\n まずはロックマンをやる時の私のお約束。全ステージを触ってみて、最初にできそうなところを探していきます。今回は8体のボスステージと最後のDr.ワイリーで恐らく9ステージです。\n\n ロックマンは1つのステージをクリアすると、そのボスが持つ性能を自分も持つことができます。ということは、「このボスを倒してこの性能を持たないと、こっちのステージはできないよ……」という事態が発生するのです。とは言え、それを初見の私が知るわけがなく、それを探りつつ進められそうなステージを決めていきます。うーん完全に見た目ですが、クイックマン、クラッシュマン、フラッシュマンあたりはイケメンですね～。\n\n が、今回はなかなか最初にやるステージが決まりません……。なんといっても難しい(笑)。1の時より出だしが悪い気がします。ちょくちょく途中まで進められてはいるのですが、どこに行っても何かの性能が足りないような。\n\n 結局1時間ほどさまよい、最後に手をつけたのがエアーマンステージ。こうやって最後にやるのがやりやすかったりするんだよね(笑)。ということで、しばらくこのステージをプレイしてみると、1番しっくりきまして、最初はエアーマンステージをクリアすることにしました。ボスが扇風機みたいな恰好をしているので、風とかの性能があるのかしら。\n\n 開始早々出てくるのは鬼。頭の左右に出たり引っ込んだりする角があります。この角に当たらないように角と角の間に飛んで乗ります。ここまではいいのですが、乗っている最中も鬼の顔の左右から次々と子分がやってきます。なので、この子たちに当たらないように左右に攻撃しながら動く必要があります。\n\n ここからこの鬼と子分エリアが続くので、角の動きと子分の動きをよく見て飛んでいきます。角や子分に当たった反動で落ちてしまうこともあり、勢いで進めることはできなそう(笑)。\n\n ここを抜けると今度は、雲の上に乗って手裏剣を飛ばしてくる奴エリアです。ここは先に雲の上にいる奴を倒して、雲の上に自分が乗る必要があります。さらに飛ばしてくる手裏剣も避けなければいけません。\n\n ここも何人か連続でいるので、雲から雲への移動になります。移動に関しては、鬼に比べると面積も狭く難しいはずなのに、そんなに落ちることなく飛んでいけました。\n\n ただ2人目から3人目への移動が、雲が動く導線と敵の動く導線が合わずで難しかったです。変にジャンプしながら攻撃しても、着地の時には雲がもう足元にないということがありそうで大変でした……。でも、慣れるとここはスムーズに進められたのでスッキリ。\n\n この後が私にとってこのステージ難関ポイント1つ目。道自体はカラクリもなく普通なのですが、卵を落としながら向かってくる鳥が厄介です。卵を落として終わるならまだしも、落とした卵から小さい小鳥たちがピュンピュン出てきて、それに体力を減らされてしまいます。\n\n タチが悪いのが、雲の中の見えないところから卵を落としてくる鳥もいること。できれば卵が落ちて小鳥が出てくる前に倒したいので、どこで鳥が来るかを覚えて、卵を落とす瞬間の卵自体を撃つようにしました。\n\n 次のエリアは簡単。手裏剣を飛ばしてくるマシーンを避けて進むだけです。初めはいちいち手裏剣の動きを見て進んだりもしていましたが、待っている暇があれば無視して進めばいいのだということに気づきました(笑)。\n\n 今までのプレイや、冒頭のステージを決めるところでも気づいている方いるとは思いますが、私はわりと強行突破をする女です。ノリはダメだとか、落ち着こうとか思っても3秒後には忘れて強行突破する女です。以後お見知りおきを……。\n\n 次にまたまた鬼。最初の鬼エリアよりなんとなく難しかったです。2つ目の鬼の角が、1つ目の鬼の端ギリギリまで進まないと出てきてくれず、1つ目に乗ったらいったん端までバッと行かないといけません。さらに1つ目と2つ目の鬼の角の動くタイミングが絶妙に合わず、タイミングを見るというよりは、乗ってすぐ次に飛ぶくらいが一番安全でした。ここも顔から子分が飛んでくるのでそれにも気を付けます。\n\n この後はまた鳥が邪魔してくるゾーン。前のエリアよりも鳥が雲に隠れているところが多く、足場が狭かったりと少し難易度が上がっています。ブロック1つの足場で、小鳥が出てきたらもう終わり。しばらく続きますが、ここも慣れてくるとそんなに体力を減らさずに進められるようになりました。途中エアーマンらしき人も! 向かい風で進みにくかったですが、遠目から攻撃へ!\n\n そしてこの後はボス。道中がどうであれ、ボスを倒さないと話になりません。ボスは今まで強行突破で何も分からないまま倒せた時もあったかもしれませんが、今回のエアーマンはそうはいかなそう。自分の攻撃自体は強行突破で撃ち続ければ大丈夫そうでしたが、位置取りが大事でした。なので死んでもそのまま研究するために、ここまで残機を残しておきたい。道中で何度も死んでしまった時は、ゲームオーバ前にもう潔くリトライをすることもありました。\n\n エアーマンはやはり風でした。何個かの小さな竜巻を色んな場所に飛ばしてきます。そして一定時間経つと、その竜巻は自分の後ろ側に流れていきます。\n\n ここで私が気を付けたことは、最初に竜巻が飛んでくる時に当たらないようにすることと、その後に流れてくる竜巻に巻き込まれないようにすること。竜巻がどこに飛んでくるのかは、簡単には分からなかったので、せめて流れていく竜巻には当たらないようにしました。できる限りどの竜巻よりも前に位置取り、流れるときは自分の前にあった竜巻をジャンプで避け、無駄に体力を減らさないようにします。ひよって後ろに行っちゃうのですが……(笑)。\n\n ボスへの攻撃はタイミングというよりは、ずっと連打でどっかのタイミングで当たって体力を減らすスタイルへ(笑)。\n\n 何度か挑戦していると、なんとボス撃破! スッキリ～(笑)。道中で体力や残機をコントロールしてきたおかげで、ボス前からやり直すなどもできて、そんなにボス戦でゲームオーバなることなく攻略できました! 道中の方が難しかったかな……。\n\n ということでエアーマンステージはクリアし、無事ここからエアーマンの性能を使えそうです! その後少しエアーマンの性能で色んなステージをロケハンしてみましたが、まだあまりピンとくるステージはなく、次回はエアーマンが最適なステージを探すところからやっていこうと思います。\n\n アクションはうまくいかないと、「これ誰ができるんだよ(-.-)」となりますが、クリアした時の快感はやばい(笑)。次回も早めに道中に慣れて、ボス戦のために自分を調整しつつ進めるように頑張ります!\nPC Watch,奥村 茉実",['https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240203-00000019-imppcw-000-1-view.jpg?exp=10800'],"['https://news.yahoo.co.jp/articles/476bbc7403bc571091f293d5ed69011b4ec05894/images/000', 'https://pc.watch.impress.co.jp/img/pcw/docs/1566/184/html/mouse_o.jpg.html']"
これもAI、あれもAI、たぶんAI、きっとAI、その定義を急がないと、きっと面倒くさいことになる（PC Watch）,https://news.yahoo.co.jp/articles/a867fd35d695983764d73292e8ddccf7a105b9c4,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240203-00000015-imppcw-000-1-view.jpg?exp=10800,2024-02-03T06:10:23+09:00,2024-02-03T06:10:23+09:00,PC Watch,imppcw,PC Watch,3438,"\n写真：PC Watch\n今のうちに、ちゃんと決めておかないと、あとあと面倒なことになるに違いない。AIの明確な定義だ。定義できるものなのかどうかも難しいが、定義がないから再定義も難しい。進化についても曖昧だ。なんとなく、猫も杓子もAI的な状況になっているが、このままでいいはずがない。\n\n■ 学ぶからこそのAI\n\n AIは一般に人工知能と訳される。AIがArtificial Intelligenceの頭文字をとったものなので、その直訳だ。困ったことに、その定義は曖昧だ。\n\n ちなみに文部科学省のサイトには子ども向けにキッズページがある。そのページの「見てみよう」というコーナーに「AIってなに？」という項目があった。そこには機械であるコンピューターが「学ぶ」ことができるにようになったマシンラーニングにより、「翻訳や自動運転、医療画像診断や囲碁といった人間の知的活動に、AIが大きな役割を果たしつつある」と書かれている。確かによく分からない…。\n\n 「命令を忠実にこなす」だけだったコンピューターが「学ぶ」ことができるようになったことが重要なポイントのようだ。命令に従ってメモリやストレージに記憶/記録するのではなく学ぶのだ。\n\n その「学ぶ」にしたって学ぶように命令されたからだと言ってしまえば元も子もないが、そこはそこ、人間だって、親に言われていやいや机に向かうことから学習を始める。そしておもしろくなれば、親に言われなくても自律的に机に向かい、学習に夢中になったりもするわけだ。記憶と学習は次元が違うとも言える。\n\n ちなみに手元で使っている電動歯ブラシはOclean X Pro Digitalという製品なのだが、アプリと連携させてAI判定による専門的なアドバイスを受けられたりもする。また、愛用のオープンイヤー型ワイヤレスイヤフォンAnker Soundcore AeroFitは、クリアな音声通話のためにAIノイズリダクション機能を搭載している。大きめ家電ではパナソニックのエアコンがエオリアAI搭載で、使うたびに部屋の環境を覚えて節電したりもする。まさに猫も杓子もAIだ。\n\n■ 「記憶」と「学習」は違うかも\n\n コンピューターが学習して賢くなるというのを最初に実感したのは日本語入力の学習機能だった。もう半世紀近く前のことだが、「直近で確定した変換結果が次の同音変換時には優先されて第一候補になる」という学習は、ものすごくシンプルだが、ものすごく役に立って、最初に使ったときに感動したのを覚えているが、今にして思えば、それは機械学習(マシンラーニング)ではなく機械記憶にすぎなかったのかもしれない。\n\n かな漢字変換に関しては、NECが1990年頃のPC-9800シリーズ用オペレーティングシステムMS-DOS3.3に、NEC AI変換という名称の日本語入力フロントエンドプロセッサ、今でいうところのIMEを提供していた。あれは本当にAIだったのだろうか。\n\n 2001年にはスピルバーグの映画「A.I.」も公開された。SFドラマであり、愛することを学習した少年ロボットの悲しい物語だった。\n\n また、今なお多くのファンに愛される鉄腕アトムは個人的にも大好きなキャラクターだ。1952年からコミック、1963年からアニメシリーズとなった作品だが、この原子力エネルギーで動き、人間と同等の感情を持ったロボットは、人工知能ではなく電子頭脳を持っていた。\n\n 人工知能と電子頭脳の違いはよく分からないのだが、少なくとも作者の手塚治虫自身が60年代半ばに書いた「アトムと私」というコラムの中では、アトムが持っているのは電子頭脳で、人類が作った宇宙衛星は人工衛星と表現していた。\n\n コンピューター的な電子回路の仕組みなしに知能や頭脳を実現するのが不可能なら、ニュアンス的にAIは本当は電子知能とするべきなのかもしれない。本当は電子と電気も区別しなくちゃとも思う。\n\n■ コンテンツがわいてくる\n\n AIだけでもややこしいのに、ほんの少し前に登場したと思いきや、一気に浸透したのが生成AIだ。ジェネレーティブAIとも呼ばれるこのAIは、コンテンツを作る能力を持っていることから生成AIと呼ばれる。\n\n ということは、それまでのAIはコンテンツを作ることができなかったことになる。表面的にはちょっと人間に近づいたイメージがある。従来のAIは学習はできても、その処理結果はコンテンツというにはほど遠かったということだ。\n\n AIは人間が学習するメカニズムを模倣してデータを処理をするそうだ。そのメカニズムをニューラルネットワークという。マシンラーニングの手法の1つだが、ヒトの脳内の神経細胞であるニューロンを数式的なモデルで表現したものだ。\n\n その処理が得意なプロセッサがNPU、その名もニューラルネットワークプロセッシングユニットだ。CPU、GPUに続く3つ目のプロセッシングユニットで、ついに、IntelもCore Ultraプロセッサで統合し、40年に一度の革新を叶えた。NPUは、まさにニューラルネットワーク処理のためのユニットで、この新世代プロセッサを搭載したコンピューターがAI PCと呼ばれる。でも、AIの明確な定義はまだだ。\n\n 処理手法の点からAIを定義することはできそうだが、果たしてそれが分かりやすいかどうかは別問題だ。最終的に「コンピューター制御」とか「マイコン制御」といったものと同じになってしまっては意味がない。\n\n■ ヘルスケアもNVIDIAの仕事\n\n 先日、NVIDIAが同社のヘルスケアビジネスにおける最新情報を紹介するブリーフィングを開催した。気軽な気持ちで参加したのだが、それはもう奥が深い内容で、浅学にして考えが追いつかなくて途方に暮れてしまった。\n\n 同社は、ヘルスケア業界ではコンピューティングの出現以来最も劇的な変革が起こっているという。そして、デジタル生物学と生成AI が、創薬、手術、医用画像、ウェアラブル デバイスの再発明に今、まさに貢献しているのだとも。\n\n NVIDIA は、10年以上に渡ってこの瞬間に備え、NVIDIA Claraというヘルスケアに特化したコンピューティングプラットフォームを開発してきた。そして、パートナー各社とのエコシステムを拡大してきたのだが、創薬分野では、こうした取り組みが転換点を迎えているともいう。なぜなら薬の研究開発チームはコンピュータ内で薬を表現できるようになったからだ。\n\n 創薬のための生成AIモデルを開発し、それをカスタマイズ、展開するためのサービスを提供するプラットフォームであるNVIDIA BioNeMoは製薬会社、テックバイオ会社、ソフトウェア会社によって使用され、医薬品の研究開発のための新たな手法を提供する。つまり、科学者が生成 AI を統合することで実験を削減し、場合によっては完全に置き換えることもできるという。創薬はAIが薬を生成することを指すということか。\n\n AIによって、これまで不可能だったことが可能になるとNVIDIA。通常のコンピューターでは解決できない問題を解決するための支援ができる。だが、それはたやすいことではない。フルスタックでのイノベーションが求められると同社は説明する。\n\n 医療技術業界は革命期に差し掛かっているのだそうだ。近い将来の医療デバイスはソフトウェアデファインドとAI対応が鍵となり、さまざまな医療機器がつながるようになる。\n\n そして、あらゆる医療機器がロボティクスになっていく。いわゆるロボット手術なども当たり前の時代がやってくると同時に、コンピュータ支援の創薬手法はさらに進化する。\n\n 80年代頃からさまざまなコンピューティングのアプローチが生まれてきたが、今は、もう一度コンピューターで何ができるかの再発明をしているところだと同社は説明する。そして、AIはヘルスケアの領域をテクノロジ産業へと発展させる。だからこそ次世代の創薬エコシステムはものすごいスピードで成長しているし、NVIDIAはそれをさらに加速する。\n\n これもAI、そして、きっとAIだ。\nPC Watch,山田 祥平",['https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240203-00000015-imppcw-000-1-view.jpg?exp=10800'],['https://news.yahoo.co.jp/articles/a867fd35d695983764d73292e8ddccf7a105b9c4/images/000']
【第45回】小型なのにSFP+もPCIeスロットもあるパワフルなミニPC「MINISFORUM MS-01」をUbuntuで使おう！（PC Watch）,https://news.yahoo.co.jp/articles/f5bfead692c520f84bb0e4e39cfad977c25b136c,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240203-00000016-imppcw-000-3-view.jpg?exp=10800,2024-02-03T06:15:19+09:00,2024-02-03T10:43:31+09:00,PC Watch,imppcw,PC Watch,13154,"\n写真：PC Watch\nMINISFORUMと言えば「こういうのあったらいいよね」というミニPCを、ちょっとひいてしまうほどの種類と早さで展開しつつ、たまに誰向けかよく分からない変態的なマシンも提供してくれる愛すべきメーカーだ。そんなMINISFORUMが先日発売を開始した「どちらかと言うと変態カテゴリー寄りの便利系ミニPC」と言えば、皆さんご存知の「MINISFORUM MS-01」だろう。\n【画像】2.5GbEのLANコネクタ2ポートに、SFP+が2ポート、さらにUSB4が2ポート並んでいる\n普通のミニPCのふりをしながら、SFP+x2ポートとか、PCIe Gen4スロットとか妙な拡張性を持っているこのマシンに、今回はUbuntuをインストールしてみよう。\n\n■ MS-01についておさらい\n\n MS-01に関してはすでにPC WatchでもミニPCなのにSFP+、U.2、PCIeを飲み込むモンスター！「MINISFORUM MS-01」で詳しく解説している。またPC Watchも参加しているYouTubeチャンネル「PAD」でも、MS-01の中身や動いている様子を確認できるので、パーツの装着方法やファンの音、ベンチマークの様子が気になる人はそちらも参考にしてほしい。\n\n ここでは改めてMS-01のスペックを簡単に紹介しておこう。\n\n 小さなサイズにインターフェイスが山盛りであることが分かるだろう。ちなみに公式サイトに記載のない部分については、Core i9-13900H(S3190のベアボーンモデル)に、Linuxをインストールして確認している。モデルによっては違うかもしれない点に注意してほしい。昨年(2023年)12月28日に購入し、2024年1月21日に届いたものなので、同じモデルであればそこまで差はないはずだ。\n\n ちなみにベアボーンモデルだと、通常モデルには搭載されているOSやメモリ/SSDが搭載されていない。OSはUbuntuで良いとして、メモリとSSDは次の機材を用意した。\n\n・Corsair VENGEANCE DDR5 4800 SO-DIMM 32GBx2\n・Western Digital SN850X NVMe WDS100T2X0E 1TB\n\n MS-01にはM.2 SSD用のヒートシンクが1台付属しているのでそれを使っている。\n\n さて、OSは何をインストールすると良いだろう。本機は「ホームサーバー用途にも使える小型ワークステーション」という位置づけである。後述するように強力な外付けGPUをPCIeスロットに接続するのは難しく、ゲーム用途に使うのはそれなりに制約が出てくる。もちろん上位モデルだとIris Xeが内蔵されているため、そこそこの性能は期待できるし、性能が必要なゲームをプレイする以外のデスクトップ用途で困ることはない。\n\n ただ、充実したインターフェイスの種類を考えると。サーバー関連OSを入れるのが、最も遊べる可能性が高くなるだろう。Linxu系/BSD系といった汎用OSに加えて、ルーター向け/NAS向けなどの機能特化な専用OS等々、いろいろ選択肢は存在する。今回は連載内容の都合上Ubuntuをインストールすることにしよう。\n\n■ 好きなUbuntuを選びたまえ\n\n 結論から言うと、当然のことながら本機はUbuntuでも問題なく動く。構成はともかく、基本的な部分は普通のPCなのでここは想定通りだ。問題は一口にUbuntuと言っても、さらに選択の余地があることだろう。2024年2月時点の選択肢としてリリース済みかつサポート期間であることを踏まえると次のいずれかとなる。\n\n・Ubuntu 22.04 LTSのデスクトップ版(Kernel 5.15 or 6.2)\n・Ubuntu 22.04 LTSのサーバー版(Kernel 5.15 or 6.2)\n・Ubuntu 23.10のデスクトップ版(Kernel 6.5)\n・Ubuntu 23.10のサーバー版(Kernel 6.5)\n\n サーバー用途として考える場合は、LTS版(長期サポート版)のUbuntuサーバーをインストールするのが無難だが、LTS版(長期サポート版)だとカーネルが若干古いという難点が存在する。\n\n MS-01の上位モデルに搭載されているRaptor Lakeは、Linuxカーネルでは5.16あたりから対応が始まり、6.2までにもいくつかの修正が入っている状況だ。さらに各種ファームウェアも新しいバージョンが提供されているため、できれば6.2以降のカーネルを使いたいところ。Ubuntuの場合は、HWE(HardWare Enablement)という仕組みを使うことでLTS版でも新しいカーネルをあとから導入可能ではある。\n\n では、22.04 LTSと6.2カーネルでどうかというと、さらに悩ましい事情が出てくる。Ubuntuは2年に1回の頻度でLTS版をリリースすることになっているのだ。つまり2022年の4月にリリースされたLTS版の次は、数カ月後の2024年4月にリリースされる24.04となる。もちろん22.04も2027年の半ばまでサポートされるのですぐに使えなくなるわけではない。ところが、24.04では、2024年2月時点ではまだリリースされていないKernel 6.8を採用する計画も立てられている。より新しいカーネルはより新しいハードウェアのサポートや新しい機能に加えて、処理の効率化や性能の向上に加えて新しい不具合も含まれている。\n\n つまり、どうせ本格運用するなら、より新しいカーネルとソフトウェアセットのほうが気分が良い。もちろん安定志向を目指すならUbuntu 22.04 LTSだが、安定志向を目指す人が(ECCメモリでもない)こんな装置を買うわけがない。いや買いはするかもしれないが、安定性が求められるクリティカルな部分で使うことはないはずだ。たぶん。もしかするとそういう猛者も多少はいるかもしれない。多少どころかごろごろいそうな気がしてきた。\n\n とにかく、どうせ遊ぶのなら、おすすめは「Ubuntu 23.10のリリース版もしくは24.04の開発版で評価しつつ、24.04がリリースされたらそちらに移行する」案だ。Ubuntuの場合は、リリース間のアップグレードはそこまで大変ではない。何か特殊なことをしていない限り、コマンド1回打ち込んで放置して、その後再起動したら完了ということが大半だ。よって24.04が出て少ししたら、23.10から上げてしまうと良いだろう。\n\n 今回はハードウェアの評価を兼ねて、Ubuntu 23.10のデスクトップ版をインストールすることにした。なぜデスクトップ版かというと、GUIアプリケーションのほうがスクリーンショットの見栄えが良いから、ただそれだけの理由である。\n\n Ubuntuのデスクトップ版のインストール方法は「人気Linuxディストリビューション、Ubuntuを触ってみよう！」を参照して欲しい。もしサーバー版を使うなら、Ubuntu日和の第26回が参考になるはずだ。\n\n■ Ubuntuではどのように認識されるのか\n\n さて、実際にMS-01のデバイスを確認していこう。まずシステム全体の情報だが、一番手っ取り早いのはシステム設定の「このシステムについて」を表示する方法だろう。\n\n とりあえず使っているCPUとメモリ、GPUやストレージ、OSにカーネルなんかを共有したい場合はこの画像でも十分だ。CPU-Zみたいな表示が欲しい場合は、「CPU-X」というソフトウェアがある。これは「cpu-x」パッケージとしてインストール可能だが、公式が配布しているAppImageパッケージを使うとより最新の情報を表示できる。[CPU-Xのサイト][]にある「Releases」ページから、最新の「CPU-X-バージョン-x86_64.AppImage」をダウンロードしよう。\n\n UbuntuでAppImageを起動するには次のように、ダウンロードディレクトリにあるファイルに実行権限をつけて起動しよう。ここでCLI操作が必要になってしまうのが若干残念ではあるが、実行権限付けて起動するだけなら、ファイルブラウザから右クリックでプロパティを表示する形でも大丈夫だ。\n\nAppImageパッケージを起動するにはlibfuse2パッケージが必要になる\n$ sudo apt install libfuse2\n$ cd ダウンロード\n$ chmod +x CPU-X-*-x86_64.AppImage\n$ ./CPU-X-*-x86_64.AppImage\n\n ちなみにCPU-XはCLIにも対応している。CLIで表示したいなら端末から「–ncurses」オプションを指定して起動してみよう。ただしCLIならUbuntuに最初から入っている「lscpu」コマンドもおすすめだ。こちらはシンプルなインターフェイスながら必要十分な情報が備わっている。\n\nここでは省略しているが、CPUフラグからはこのCPUはpopcntやavx-vnniとかibtとかが使えるかどうかをすぐに確認できる\n$ lscpu\nアーキテクチャ:x86_64\nCPU 操作モード:32-bit, 64-bit\nAddress sizes:46 bits physical, 48 bits virtual\nバイト順序:Little Endian\nCPU:20\nオンラインになっている CPU のリスト: 0-19\nベンダー ID:GenuineIntel\nモデル名:13th Gen Intel(R) Core(TM) i9-13900H\nCPU ファミリー:6\nモデル:186\nコアあたりのスレッド数:2\nソケットあたりのコア数:14\nソケット数:1\nステッピング:2\nCPU(s) scaling MHz:9%\nCPU 最大 MHz:5400.0000\nCPU 最小 MHz:400.0000\nBogoMIPS:5990.40\nフラグ:fpu vme de （略） ibt flush_l1d arch_capabilities\nVirtualization features:\n仮想化:VT-x\nCaches (sum of all):\nL1d:544 KiB (14 instances)\nL1i:704 KiB (14 instances)\nL2:11.5 MiB (8 instances)\nL3:24 MiB (1 instance)\nNUMA:\nNUMA ノード数:1\nNUMA ノード 0 CPU:0-19\nVulnerabilities:\nGather data sampling:Not affected\nItlb multihit:Not affected\nL1tf:Not affected\nMds:Not affected\nMeltdown:Not affected\nMmio stale data:Not affected\nRetbleed:Not affected\nSpec rstack overflow:Not affected\nSpec store bypass:Mitigation; Speculative Store Bypass disabled via prctl\nSpectre v1:Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nSpectre v2:Mitigation; Enhanced / Automatic IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence\nSrbds:Not affected\nTsx async abort:Not affected\n\n CPU以外のシステム情報をCLIで表示したいのであれば、「sudo lshw -short」が一番簡単な方法だ。ただしハードウェアの接続パスベースでの表示なので若干読みづらい。もう少し人間に優しい表示が欲しいなら、inxiコマンドがある。\n\ninxi自体はもともとシステム情報をIRCに流し込んで共有するために作られている\n$ sudo apt install inxi\n$ sudo inxi -v 4 -c 10\n\n Ubuntuで正確なシステム情報を取得するためには管理者権限が必要だ。さらにinxiでは、「-v 数字」で情報の詳細度を「-c 数字」で表示する色や出力先を変更できるようになっている。\n\n PCIeデバイスやUSBデバイスはそれぞれ「lscpu」や「lsusb」で確認できる。このあたりはノートPCの動作確認と同じなので、第38回も参照して欲しい。\n\n■ MS-01のネットワークを確認しよう\n\n ようやくMS-01の特色であるネットワークインターフェイスの話に入ろう。冒頭の画像でも登場したが、同じようなミニPCの皮を被ったマシンとして第28回で紹介した「R86S」が存在する。ネットワークの設定方法や動作確認方法は、そちらにでも詳しく紹介している。手順としては基本的には同じとなるので、ここでは簡単に確認していこう。\n\n 2.5GbEと10GbEをループさせて、双方をネットワーク名前空間で分離しつつ、iperfでフレームを流してみるという流れだ。具体的には次のようなコマンドを実行していくことになる。まずインタフェイス名と実際のポートの紐付けを確認しておこう。\n\nポート名と物理的な位置は次のような関係になる\n$ ip link\n（中略）\n\n2.5G LAN/I226-V/裏から見て右\n2: enp87s0: ＜NO-CARRIER,BROADCAST,MULTICAST,UP＞ mtu 1500 qdisc mq state DOWN group default qlen 1000\nlink/ether 58:47:ca:74:fd:bb brd ff:ff:ff:ff:ff:ff\n\n2.5G LAN/I226-LM/裏から見て左\n3: enp88s0: ＜NO-CARRIER,BROADCAST,MULTICAST,UP＞ mtu 1500 qdisc mq state DOWN group default qlen 1000\nlink/ether 58:47:ca:74:fd:bc brd ff:ff:ff:ff:ff:ff\n\nSFP+/X710/裏から見て左\n4: enp2s0f0: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UP group default qlen 1000\nlink/ether 58:47:ca:74:fd:b9 brd ff:ff:ff:ff:ff:ff\n\nSFP+/X710/裏から見て右\n5: enp2s0f1: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UP group default qlen 1000\nlink/ether 58:47:ca:74:fd:ba brd ff:ff:ff:ff:ff:ff\n\n ちなみにSFP+のポートについては、LEDによるポート確認にも対応している。たとえばethtoolコマンドをインストールして、次のように実行すると該当するポートのLEDが点滅する。ポートの位置を確認したい場合に便利だろう。\n\nポートのリンクLEDを点滅させる方法。MS-01だと2.5GbEのほうは未対応だった\n$ sudo apt install ethtool\n$ sudo ethtool -p enp2s0f0\n\n 速度の計測にあたって、より高性能な対向装置があるならそれを使うのが良いが、もし存在しない場合はそれぞれ2ポートあることだし、ループさせて名前空間で分離して使うと良いだろう。今回は4ポート分の名前空間を作ってそれぞれにネットワークインターフェイスをアサインすることにする。\n\nnet0/net1/net2/net3を作成し、それぞれにeth0という名前を付け「192.168.100.100-103」とアドレスを割り振る\n$ seq 0 3 | xargs -I@ sudo ip netns add net@\n\n$ ip netns list\nnet3\nnet2\nnet1\nnet0\n\n$ sudo ip link set dev enp87s0 netns net0 name eth0\n$ sudo ip link set dev enp88s0 netns net1 name eth0\n$ sudo ip link set dev enp2s0f0 netns net2 name eth0\n$ sudo ip link set dev enp2s0f1 netns net3 name eth0\n\n$ seq 0 3 | xargs -I@ sudo ip netns exec net@ ip link set eth0 up\n$ seq 0 3 | xargs -I@ sudo ip netns exec net@ ip addr add 192.168.100.10@/24 dev eth0\n\nnet0とnet2はiperf3のサーバーとして動かす\n$ sudo apt install iperf3\n\n$ sudo ip netns exec net0 iperf3 -s 192.168.100.100\n$ sudo ip netns exec net2 iperf3 -s 192.168.100.102\n\nnet1とnet3からフレームを送り速度を計測する\n2.5G LANのポートの結果:\n$ sudo ip netns exec net1 iperf3 -t 60 -i 0 -O 3 -c 192.168.100.100\nConnecting to host 192.168.100.100, port 5201\n[5] local 192.168.100.101 port 41700 connected to 192.168.100.100 port 5201\n[ ID] IntervalTransferBitrateRetrCwnd\n[5]0.00-60.00sec16.4 GBytes2.35 Gbits/sec01.82 MBytes\n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] IntervalTransferBitrateRetr\n[5]0.00-60.00sec16.4 GBytes2.35 Gbits/sec0sender\n[5]0.00-60.00sec16.4 GBytes2.35 Gbits/secreceiver\n\nSFP+のポートの結果:\n$ sudo ip netns exec net3 iperf3 -t 60 -i 0 -O 3 -c 192.168.100.102\nConnecting to host 192.168.100.102, port 5201\n[5] local 192.168.100.103 port 40908 connected to 192.168.100.102 port 5201\n[ ID] IntervalTransferBitrateRetrCwnd\n[5]0.00-60.00sec65.7 GBytes9.41 Gbits/sec64311.62 MBytes\n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] IntervalTransferBitrateRetr\n[5]0.00-60.00sec65.7 GBytes9.41 Gbits/sec6431sender\n[5]0.00-60.00sec65.7 GBytes9.41 Gbits/secreceiver\n\n どうやらどちらのポートも期待通りのスペックが出ているようだ。ちなみに上記は同時に計測しており、どちらかが動いているともう片方が性能劣化するということもない。\n\n 上記では60秒間送り続けるというオプションを指定している。この間、CPUの温度は平均で2℃ほど上昇したが、おおよそ38℃付近を維持し、さらにCPU負荷自体はそこまで上がらなかった。ファンも速度があがった感じはしないのでネットワーク負荷でシステム自体が不安定になることはあまりないと考えて良いだろう。このあたり、ネットワーク負荷をかけるとケースを触るのに気が引けるようになるR86Sよりも優秀だ。\n\n あと、MS-01にはWi-Fi 6E(MediaTek MT7922)も搭載されている。6Eということは6GHz帯も使えるというわけだ。このあたりはiwパッケージで提供されているiwコマンドを使うと分かりやすい。\n\n2.4GHz帯/5GHz帯だけでなく、6GHz帯もサポートしていることが分かる\n$ sudo apt install iw\n$ iw reg get\nglobal\ncountry JP: DFS-JP\n(2402 - 2482 @ 40), (N/A, 20), (N/A)\n(2474 - 2494 @ 20), (N/A, 20), (N/A), NO-OFDM\n(4910 - 4990 @ 40), (N/A, 23), (N/A)\n(5170 - 5250 @ 80), (N/A, 20), (N/A), AUTO-BW\n(5250 - 5330 @ 80), (N/A, 20), (0 ms), DFS, AUTO-BW\n(5490 - 5710 @ 160), (N/A, 23), (0 ms), DFS\n(57000 - 66000 @ 2160), (N/A, 10), (N/A)\n\niw phyコマンドを使うとより詳細なデバイス情報が得られる\n$ iw phy\nWiphy phy0\n（中略）\nSupported interface modes:\n* managed\n* AP\n* AP/VLAN\n* monitor\n* P2P-client\n* P2P-GO\n\n 「Supported interface modes」から、単なるWi-Fiクライアント(managed)だけでなく、アクセスポイント(AP・AP/VLAN)や直接接続するWi-Fi Direct(P2P-client・P2P-GO)にも対応していることが分かる。MS-01をちょっとしたWi-Fiのアクセスポイントに仕立て上げることも可能だ。\n\n■ 悩ましいPCIeスロットの使い方\n\n MS-01で最も悩むのが、PCIeスロットをどう使うかだろう。なにせ「シングルスロット/ハーフハイト」というサイズに制限のあるスロットだからだ。シングルスロットであることから、今風のGPUはなかなか厳しくなる。M.2 NVMEの拡張スロットとかなら可能だが、そもそもM.2スロットが3スロットもある状態だ。あとはUSB Type-Cポートを増やしたり、SDカードスロットを追加するのも手かもしれない。\n\n ネットワークデバイスなら「シングルスロット・ハーフハイト」を満たせるデバイスはそれなりに存在するのだが、実はMS-01にはもう1つの制約がある。それが「ブラケット/外部コネクタとスロットとの干渉問題」だ。\n\n もちろんブラケットを外せば入るが、その場合はPCIeカードのコネクタとSFP+のケージ(とMS-01内部の緩衝材)でPCIeカードを支えることになる。ちょっと怖い。そもそもPCIeスロットはブラケットで固定しておかないとちょっとした衝撃(たとえば光ケーブルの挿抜)で抜けてしまう。つまりブラケットなしでは使い物にはならない。とは言え、せっかくだから何かPCIeデバイスを接続しておきたい。特に前傾の記事では「USB4を使えば20Gbps出せる!」なんて見せられた日には、10GbE×2では満足したくない。もうちょっとこう、変わったものをつなげてみたい。\n\n というわけで、MikrotikのCCR2004-1G-2XS-PCIeを買ってみた。\n\n これは何かと言うと、4コアのArm 64bit CPUと4GBのメモリが搭載された「SmartNIC」と呼ばれるカテゴリの製品だ。\n\n 一般的なネットワーク通信において、NICはフレームをCPUに上げるのが主な仕事であり、届いたあとのフレームをどうするかはCPUの仕事だった。普通のPCならそれで問題ないのだが、トラフィックが多いサーバーになるとCPUの計算リソースをそれなりに消費するようになる。CPUには本来もっと計算して欲しいことがたくさんあるのに、大量のデータの送受信処理にそれを奪われるのは気に食わない。だったらNIC側でもうちょっとやれることはやろうというのが、ハードウェアオフロードという考え方だ。そのハードウェアオフロードを何段か進めたのがSmartNICになる。\n\n 要するにNICに専用のASICや汎用FPGAや、さらには低消費電力のCPUを載せることで、そこそこの柔軟性と性能のバランスを持たせたNICだと思えばいいだろう。CCR2004-1G-2XS-PCIeの場合は、ArmのSoCが載っているので中でOSが動いている。何もしなくても、25GbEが2ポートつながったNICになるので、これまで通りiperfで測ってみよう。\n\nMS-01からは1GbE x 4ポートのように見えてしまうが、2ポートは管理ポートで、それ以外が25GbEのポートとなる\n$ lspci\n（中略）\n01:00.0 Ethernet controller: Qualcomm Atheros AR8151 v2.0 Gigabit Ethernet\n01:00.1 Ethernet controller: Qualcomm Atheros AR8151 v2.0 Gigabit Ethernet\n01:00.2 Ethernet controller: Qualcomm Atheros AR8151 v2.0 Gigabit Ethernet\n01:00.3 Ethernet controller: Qualcomm Atheros AR8151 v2.0 Gigabit Ethernet\n\n$ ip link\n2: enp1s0f0: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n3: enp1s0f1: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n4: enp88s0: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\nlink/ether 58:47:ca:74:fd:bb brd ff:ff:ff:ff:ff:ff\n5: enp1s0f2: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\nlink/ether 78:9a:18:6b:ed:7d brd ff:ff:ff:ff:ff:ff\n6: enp1s0f3: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\nlink/ether 78:9a:18:6b:ed:7f brd ff:ff:ff:ff:ff:ff\n\n$ sudo ethtool enp1s0f0 | grep -E ""baseT|Speed""\nSupported link modes:10baseT/Half 10baseT/Full\n100baseT/Half 100baseT/Full\nSpeed: 25000Mb/s\n\n残念ながら4Gbps程度しか出なかった\n$ sudo ip netns exec net1 iperf3 -t 60 -i 0 -O 3 -c 192.168.100.100\nConnecting to host 192.168.100.100, port 5201\n[5] local 192.168.100.101 port 47058 connected to 192.168.100.100 port 5201\n[ ID] IntervalTransferBitrateRetrCwnd\n[5]0.00-60.00sec28.8 GBytes4.13 Gbits/sec27851.08 MBytes\n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] IntervalTransferBitrateRetr\n[5]0.00-60.00sec28.8 GBytes4.13 Gbits/sec2785sender\n[5]0.00-60.00sec28.8 GBytes4.13 Gbits/secreceiver\n\n どうも4Gbpsぐらいしか出ない。Arm CPUで動いているRouterOS側の設定で何か足りないのか、このデバイスの仕組み上は今回のようなやっつけの接続方法だとダメだったのかもしれない。残念ながら時間内には原因を追求できなかった。\n\n なお、CCR2004-1G-2XS-PCIeには一応ファンは付いているので、冷却はそれなりに行なわれるはずだが、ファンはそれなりにうるさい。小さいファンだからか甲高い音が鳴るため、手元で使うには難しいだろう。あとCCR2004-1G-2XS-PCIeそのものはかなり熱くなる。それでも遊びがいのあるデバイスではあるので満足だ。\n\n このようにMS-01は、特定の性癖を持った人の琴線に触れつつ重要な部分はきちんと動く、ほどよい仕上がりになっている。気になった人はぜひ1台購入してほしい。そうすればきっとMINISFORUMがさらに「ちょっと変わったPC」を出す気になってくれるはずだから。\nPC Watch,Ubuntu Japanese Team/株式会社 創夢 柴田充也",['https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240203-00000016-imppcw-000-3-view.jpg?exp=10800'],"['https://news.yahoo.co.jp/articles/f5bfead692c520f84bb0e4e39cfad977c25b136c/images/000', 'https://pc.watch.impress.co.jp/img/pcw/docs/1566/002/html/ms01-02.jpg.html']"
