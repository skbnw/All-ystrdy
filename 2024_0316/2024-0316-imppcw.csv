headline,mainEntityOfPage,image,datePublished,dateModified,author,media_en,media_jp,str_count,body,images,external_links
奥村茉実の「ロックマン2」、知識も増えて攻略が進む！（PC Watch）,https://news.yahoo.co.jp/articles/af5e63626d82bc2d559e364e2a9c4800a5d318cd,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240316-00000020-imppcw-000-2-view.jpg?exp=10800,2024-03-16T08:02:14+09:00,2024-03-16T12:08:35+09:00,PC Watch,imppcw,PC Watch,3466,"\n写真：PC Watch\nみなさんこんにちは、奥村茉実です! 今週も引き続き「ロックマン クラシックス コレクション」に収録されるシリーズ2作目、「ロックマン2 Dr.ワイリーの謎」をプレイします。初代はファミコン版が1988年に発売され、コレクションはSteamにて2,547円で購入可能です。\n【画像】レトロゲームのプレイにはマウスコンピューターさんの「G-Tune E4-I7G60DB-B」を利用させていただいています。主な仕様は、Core i7-12650H、メモリ16GB、GeForce RTX 4060 Laptop、SSD 500GB、14型フルHD/144Hz液晶を搭載しています\nここ最近は何気にスムーズに進めてこれています。今回もパパっと何面かクリアしたいところ。ただ嫌なステージを後回しにしているので、普通に考えてどんどん難しくなっていくってことよね……(笑)。\n\n ここまでにクリアしているステージは、エアーマン、クイックマン、ヒートマン、フラッシュマンの4つ。倒して入手したボスたちの武器をうまく使いたいけど、今回も結局ノーマルロックマンで倒せちゃいそうな予感もします。\n\n とりあえず残っているステージに一通り入ってみて、一番手ごたえがあったメタルマンステージから挑戦することに! ここは地面がレールで勝手に動いてしまうステージです。開始早々、最近覚えたE缶があったのでゲット。E缶のすごさを分かってしまったので、もう逃すわけにはいきません(笑)。\n\n 次に出てきたのが、上から落ちてくるトゲトゲの重そうなやつ。ここは急いで超えたい半面、ジャンプをすると落ちる前のトゲトゲに当たってしまい、前にこのステージに入った時も頭を抱えていました。私がここで使ったのが、フラッシュマンの時を止める武器。ここを通る時は時を止めて、トゲトゲが落ちてこないようにします。\n\n 次の場面では地面が動き、かつ上下からねじがニョキニョキと出てきます。何の武器を使うべきなのかいろいろと試しましたが、特に何も効かず……。慎重にねじがなくなるのを待ってから進みました。\n\n ここで前回のE缶に続いて、今回もここにきて初めて知ったことがあったのでご紹介(笑)。武器を切り替えるオプション内に、1、2、3という数字とゲージがありました。私は気づいていたような、そんなに気にしていなかったような感じですが、ふとコメントで気づき3つそれぞれを使ってみました。\n\n すると、まさかの有能な動く足場が出てきた!? 1を選択すると小さな足場が上にフワーっと動きます。2は横へ、3はバウンドをして飛びながら横に進むものでした。えええええ! どうしてもいけないところとかは、これを使えば余裕だった!?\n\n ということで、早速普通のジャンプでは届かない位置に1機追加アイテムがあり、ここまでは無視をしていましたが、1番を使ってみました。すると無事上がることができ、アイテムゲット!\n\n ここからがこのステージの難関ポイント。地面が動きつつ、タイヤに乗ったウサギのような奴らがこちらに向かってきます。ここも最初は色んな武器を使って、ウサギを倒したり、タイヤを壊したり、そもそも無視をして強行突破もしていましたが、そうするとボスまでの各ゲージがなくなりそうで、いったん冷静に検討してみることに。\n\n ということで、ウサギはノーマルロックマンで倒し、残ったタイヤは普通に飛び越えるようにしました。特にタイヤをいいタイミングで飛び越えるのが難しかったですが、なんとか超えられました……。\n\n 難関ポイントを抜けると、何回か見たことあるだるま落とし軍団が登場。顔の部分を攻撃すると、全パーツがばらけます。私はよく、ばらけるときにそのパーツに当たっていた記憶があります。\n\n 最初はここでも当たって砕けろで進んでいましたが、移動できる武器の1を使って、だるまを倒さずに上に行って、飛び越えることにしました。もうだるまは相手にしません(笑)。\n\n そしてここでまた頭を使わないととれなそうなところにE缶。ここはボタンを押しながら左に降りていき、取った後は移動の武器2で横に移ります。なんて便利なの……。\n\n その後は、これもいつもお世話になっているパンチマシーンのような敵。近づくと暴れだすので、できれば近づきたくない。ただ、倒し方が謎なので引き続き強行突破です(笑)。\n\n そして見えてきたボス、メタルマン! こいつは、道中でうさぎが乗っていたタイヤのような物を飛ばしてきます。どの武器を使ってもあまり効いている感覚がなく、ノーマルロックマンでE缶2つを使いつつ、無理矢理攻撃していくことにしました。\n\n 逃げることもまぁまぁ難しかったので、ひたすら攻撃連打です。するといつの間にか撃破! 特に攻略的なことをしていなくて、なんか悪いことをした気分ですが、1機追加やE缶のアイテムは次に持ち越せないし、これも私の作戦だし……(笑)。ということで、このボスも結局30分くらいで撃破です!\n\n まだ時間があったので、次のステージにも挑戦。いつかやらないといけないか……、ということでクラッシュマンステージを選択しました。\n\n ここは初見の時からなんか嫌な印象が(笑)。まず冒頭ではしばらく上に進まないといけないのですが、変なロボットがたくさんこちらに向かってきます。1つ1つは簡単に倒せますが、四方八方から来るので、間に合わなかったり、1体倒している間にまた追加で出てきたりとイライラゾーンです。この部分はしばらく続きます……。ここはもう、落ち着いてロボットを倒しながら進むしかない。\n\n 次に前にも見たようなヘルメットマン。遠くにいるとただのヘルメットですが、近づくと顔からたくさん弾を出してきます。私はあまり丁寧に向き合ったことがなく、基本無視で進めます(笑)。\n\n その後は、またまたロボットと戦うゾーン。ただここでは常に動いている足場にうまく乗って上に進む必要があります。もちろん、ロボットの邪魔を回避しながら。ここも、冒頭の部分と同じでひたすら冷静に対処しながら進みました。特に動く足場の導線がゴチャゴチャのところは難しく、移動の武器1を使って、足場を無視して上にスーッと上がりました(笑)。\n\n ここでまただるま落としがやってきましたが、メタルマンの時と同じく、移動の武器1を使って飛び越えました(笑)。その後のヘルメットマンがいた部分は移動の武器2で横にスッと抜けます(笑)。\n\n なんとかここを抜けると、初見の時に私が発狂したゾーンです。ひたすらはしごで上に向かいますが、鳥が卵を産んで、その小鳥たちに攻撃をされます。そうすると、HPも減るし、最悪、下まで一気に落ちてしまいます。\n\n ということでメタルマンでゲットした武器を使ってみました。ウサギが乗っていたタイヤを上に向かって出してくれて、鳥や小鳥たちを消滅させてくれます。あとここは、進むはしごによって出るアイテムや受ける攻撃も異なるので、何度かやってみて1番簡単な道を探します。\n\n なんとかここを抜けると安定の絶対倒せないデカロボット。これは前回同様、エアーマンの武器の風で小さくします。そして上の方に1機追加アイテムがあったので、ここもまた移動の武器1で上に行きます。\n\n あんなに嫌だったこのステージでも、気づくと目の前にボスのクラッシュマン! この敵は、飛びながら数秒後にバババッと爆発する爆弾を投げてきます。爆弾は避けられるような気もしましたが、全体的に相手の動きが速く、ボスにぶつかることが多くなってしまいます。\n\n 色んな武器を試して、ふとエアーマンを使ってみると、まさかの2撃ほどでクラッシュマンがいなくなりました。え!? どうやらクラッシュマンの弱点はエアーマンだったようです(笑)。意図的ではなかったけど、まさかの展開すぎ……。とりあえずやったー! あ、またエアーマン活躍(笑)\n\n ということで、今回も2ステージをサラッとクリアできました。倒してきたボスが増えた分、武器も増えていて、道中やボスで実はうまく使いこなせているのと、今回知った移動の武器がやっぱり大きい! 次回もこのままサラッとクリアしちゃいますわ( *´艸｀)\nPC Watch,奥村 茉実",['https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240316-00000020-imppcw-000-2-view.jpg?exp=10800'],"['https://news.yahoo.co.jp/articles/af5e63626d82bc2d559e364e2a9c4800a5d318cd/images/000', 'https://pc.watch.impress.co.jp/img/pcw/docs/1576/821/html/mouse_o.jpg.html']"
【第48回】脱ESXi？UbuntuとCockpitで仮想化プラットフォームを構築しよう（PC Watch）,https://news.yahoo.co.jp/articles/a1b725902409467d1f83f9e0b2bcd42d6a969b8f,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240316-00000018-imppcw-000-1-view.jpg?exp=10800,2024-03-16T06:18:12+09:00,2024-03-16T06:18:12+09:00,PC Watch,imppcw,PC Watch,7112,"\n写真：PC Watch\n本連載でも何度か言及しているが、仮想マシンはとても便利だ。1台のPCで複数のOSを併用したり、ホストOSの環境を汚さずにアプリの検証を行なったりと、便利に活用している方も多いのではないだろうか。\n【画像】Firefoxであれば「詳細へ進む」→「危険性を承知の上で使用」をクリックしよう\n無料で使える仮想化ソフトウェアと言えば、なんといってもVirtualBoxだ。WindowsユーザーがUbuntuデスクトップを体験してみたい時などは、筆者もまず最初にVirtualBoxの利用を勧めている。\n\n VirtualBoxは確かに便利なのだが、基本的にはデスクトップアプリだ。初心者でも使いやすい反面、「サーバー用途で仮想マシンを複数同時に動かしたい。それも自動的に」といった用途には向かない部分もある。そのためサーバー運用の分野では、専用の仮想化ハイパーバイザーが使われることが多い。\n\n そしてオンプレミスにおける仮想化ハイパーバイザーの定番とも言えるのが、VMware ESXiだ。詳しくはESXiのページを見ていただきたいのだが、簡単に言えばOSのかわりにハードウェアに直接インストールすることで、仮想マシンを動かす基盤を構築するソフトウェアだ。ESXiは無償版が用意されていたことから、サーバーが複数動いているような誤家庭であれば、1台くらいは存在したのではないだろうか。\n\n ところが最近、VMware社の買収にともなうさまざまな変更があり、ESXi無償版の提供は終了してしまった。有償版を使うほどではないホビーユーザーにとっては大ピンチである。\n\n ESXiの代替候補となるソリューションは、いくつか存在する。たとえば本サイトの姉妹サイトであるINTERNET Watchでもたまに紹介される、Proxmox VEだ。これはDebian GNU/Linuxをベースとした仮想化プラットフォームで、実は筆者も10年以上前から利用している。そのためProxmox VEを紹介しようか……と思ったのだが、「それUbuntu関係ないやろ」とツッコミが入ってしまった。\n\n というわけで今回は、Ubuntu上で動作する別の仮想マシン管理ソリューションを紹介しようと思う。\n\n■ Cockpitとは\n\n そこで今回紹介するのが「Cockpit」だ。実はCockpitは、WebブラウザからLinuxのシステム管理を行なうためのソフトウェアで、仮想マシン管理用のソフトウェアではない。ただしプラグインによる機能拡張をサポートしており、仮想マシンの管理を任せることもできる、というわけだ。インターネットのベテラン(多方面に配慮した表現)ならば「Webminのなんかすごいやつ」と言えば、その雰囲気は伝わるのではないだろうか。\n\n■ NetworkManagerでネットワークを管理する\n\n それではここからは、実際にUbuntuにCockpitをインストールして、仮想マシンを動かすまでを紹介しよう。なお原稿執筆時期の都合上、来月リリース予定のUbuntu Server 24.04 LTSの開発版]を使って動作確認を行っていることをご了承いただきたい。また開発版のUbuntu Serverのインストール手順については省略させてもらう。基本的には第26回と同じなので、こちらを参照していただきたい。\n\n サーバーのインストールが完了したら、最初にやっておきたいのがIPアドレスの固定化だ。OSのインストール時に作成された設定が「/etc/netplan/50-cloud-init.yaml」に保存されているので、このファイルを以下のように書き換えてほしい。\n\n/etc/netplan/50-cloud-init.yamlの変更内容\nnetwork:\nrenderer: NetworkManager\nethernets:\nNIC名(enp1s0など):\naddresses:\n- 設定したいIPアドレス(192.168.1.20/24など)\nroutes:\n- to: default\nvia: デフォルトゲートウェイのアドレス(192.168.1.1など)\nnameservers:\naddresses:\n- ネームサーバーのアドレス(192.168.1.1など)\nsearch: []\nversion: 2\n\n 基本的には【第29回】で紹介した方法と同じなのだが、「renderer: NetworkManager」という1行を追記している所がポイントだ。Netplanは暗黙的に、systemd-networkdによってネットワークを設定する。だがCockpitはNetworkManager経由でNICを管理するため、NetplanのrendererをNetworkManagerに変更しておきたいのがその理由だ。\n\n ちなみにUbuntu Serverでは、デフォルトでNetworkManagerはインストールされていないため、パッケージのインストールも必要になる。設定ファイルの書き換えが完了したら、以下のコマンドを実行して、正しくIPアドレスが設定されていることを確認しよう。\n\nNetworkManagerをインストールしてから、ネットワーク設定を適用する\n$ sudo apt update\n$ sudo apt install -y network-manager\n$ sudo netplan apply\n\n■ Cockpitのインストール\n\n Cockpit自体はAPTでインストールできる。以下のコマンドを実行しよう。\n\ncockpitパッケージのインストール\n$ sudo apt install -y cockpit\n\n これだけでCockpitが動きだす。いや、厳密に言えばポートを待ち受けているのはsystemdで、アクセスがあった際に初めてCockpitが動き出すのだが、細かいことはどうでもいいだろう。Webブラウザから「https://サーバーのIPアドレス:9090」にアクセスしてみよう。インストール直後のCockpitは自己署名証明書を使用しているため、ブラウザが警告を出す。本来であれば正式な認証局が発行した証明書を使うべきだが、本題から外れてしまうため、ここでは無視する。\n\n Cockpitのログイン画面が表示されるので、Ubuntuのユーザー名とパスワードを入力してログインしよう。\n\n Cockpitはページの左側に管理項目が、右側にその内容が表示される。よくあるタイプの画面なので、特に迷うことはないだろう。たとえば「ログ」ではホストのログを確認できる。日次やエラーレベルでフィルタすることもできるため、SSH越しにlessやgrepで検索するより便利だろう。\n\n 「ネットワーキング」ではホストのネットワークを管理できる。VPNやNICチーミングといった設定も可能だ。「ユーザー」ではユーザーアカウントの管理が行なえる。本記事の主題からは外れるため解説は省くが、とりあえずいろいろとクリックしてみてほしい。\n\n■ Ubuntu ServerとLVMの話\n\n ところで、このスクリーンショットを見てほしい。まっさらのUbuntu ServerにCockpitをインストールし、ストレージの情報を表示したものだ。\n\n OSがインストールされているのが、「nvme0n1」というSSDで、容量は見ての通り1TBだ。だが実際に作成されているext4ファイルシステムは、なんと110GBしかないのだ。この例では、1TBのうち約900GB弱の領域は、このままでは使えない。\n\n これだけ聞くと「欠陥だ!」と思うかもしれないが、まあちょっと落ち着いて聞いてほしい。\n\n Ubuntu Serverはデフォルトで、LVMという機能を使ってボリュームを管理する。LVMについては【第34回】で少し触れたが、高度で柔軟なボリューム管理を行なうための機能だ。複数のディスクを束ねて巨大な1つのボリュームを作成したり、任意の時点のスナップショットを作成し、後からの巻き戻しを可能にする。\n\n PCのストレージを、大容量のものに引越しをしたことがある人は理解できると思うが、パーティションの拡張というのはそれほど難しくない。それに対して縮小は少々面倒だ。LVMの特徴は柔軟なボリューム管理なのだが、ストレージに空き容量がないと、新規ボリュームの追加やスナップショットの作成ができなくなってしまう。そこでUbuntuでは、敢えてデフォルトのボリュームサイズを小さく抑えることで、将来のための空き容量を確保しているというわけだ。どのようにサイズを決定しているかは、興味があったらインストーラーのソースコードを見てみてほしい。\n\n とはいえ、今回は仮想マシンを大量に動かす予定のサーバーのため、ストレージは大きいに越したことはない。そこで空き容量すべてを使って、ボリュームを拡張してしまおう。以下のコマンドは、Ubuntuがインストールされている論理ボリュームを、ボリュームグループの100%まで拡張した上で、ファイルシステムをリサイズするコマンドだ。\n\nこの仕様に気づかず「なんかサーバーのディスクの枯渇が早いような……?」と感じているうっかりサーバー管理者は、ストレージのサイズを確認した上で、このコマンドを実行してほしい\n$ sudo lvextend -l 100%VG -r /dev/ubuntu-vg/ubuntu-lv\n\n■ Cockpitで仮想マシンを管理する\n\n Cockpitで仮想マシンを管理できるように、プラグインをインストールしよう。Ubuntuでは「cockpit-machines」パッケージをインストールすればいい\n\n$ sudo apt install -y cockpit-machines\n\n インストールすると、Web UIの左ペインに「Virtual machines」という項目が増えるので、ここをクリックしよう。\n\n VMの作成には管理者権限が必要になる。まず上部にある「制限つきアクセス」という南京錠のアイコンをクリックする。するとパスワード入力ダイアログが表示されるので、ログインしているユーザーのパスワードを入力しよう。\n\n 管理者に昇格できたら、今度は「仮想マシンの作成」をクリックする。例としてAlmaLinux 9の仮想マシンを作成してみよう。仮想マシン作成ダイアログが開いたら、各項目を埋めていく。「名前」には分かりやすい仮想マシンの名前をつけよう。「接続」は「System」、「インストールタイプ」は「OSをダウンロード」とした。こうすることで、リストから選択できるOSに関しては、ISOイメージなどを用意することなくインストールができる。OSは前述の通り「AlmaLinux 9」、ストレージは「qcow2」を新規作成し、ストレージとメモリのサイズは適当に設定した。\n\n これで仮想マシンが起動する。一覧から仮想マシンの名前をクリックすると、以下のような詳細画面が表示される。「コンソール」の部分に、仮想マシンの画面が表示されているのが見えるだろう。ここにフォーカスを当てると、キーボードやマウスで仮想マシンの操作が可能だ。\n\n なお仮想マシンをサーバーとして運用するのであれば、ホスト起動時に仮想マシンも自動的に起動するようにしておくと便利だ。上記イメージの「自動起動」をオンにしておくといいだろう。\n\n■ ISOイメージからインストールする\n\n 前述のOSをダウンロードする方法では、インストーラを用意する必要もなく、簡単に仮想マシンにOSをインストールできた。だがよく見てみると分かるのだが、Ubuntuは16.04と18.04しか選択できない。さすがにこれは古すぎる。ではここにリストアップされていないOSはインストールできないのかと言えば、もちろんそんなことはない。ISOイメージファイルからのインストールも、当然サポートされている。\n\n 仮想マシンの新規作成時に「インストールタイプ」を「URL」にしよう。そして「インストールソース」にISOファイルのURLを入力すればいい。\n\n ダウンロード済みのISOイメージファイルを使うこともできる。ISOファイルをホストにコピーした上で、「インストールタイプ」を「ローカルインストールメディア」、「インストールソース」に、ISOファイルのパスを指定しよう。ただしこの際ISOファイルは、Cockpitにログインしているユーザーと、libvirt-qemuユーザーの両方が読み取れるパーミッションになっている必要がある点にだけ注意しよう。\n\n■ 仮想マシンをLANに直接公開する\n\n Cockpit-machinesをインストールすると、デフォルトでvirbr0という仮想ブリッジが作成される。これは仮想的なL2スイッチとして動作し、各仮想マシンはTAPデバイスを通じて仮想ブリッジに接続される。簡単に言えば、ホストが所属するLANの中に、もうひとつ別の(仮想的な)LANが入れ子になっているイメージだ。\n\n こうした構成は、外部へ出て行く分には問題はないのだが、別のPCから仮想マシンに直接アクセスすることができないという、NAT特有の問題がある。外部からアクセスできないと、サーバーとしての用を成さないため、これはちょっと困った問題だ。そこで仮想マシンを、ホストと同じLANに直接接続する方法を紹介しよう。\n\n まず左ペインから「ネットワーキング」をクリックする。するとホスト上に存在するインターフェイスの一覧が表示されるので、先ほど固定IPアドレスを設定したホストのNICの名前を覚えておこう。\n\n 「ブリッジの追加」をクリックする。ダイアログが開いたら、ブリッジ名を入力し、ポートとして先ほど控えたNICを選択したら、「追加」をクリックしよう。\n\n するとインターフェイス一覧からNICが消え、代わりに今作成したブリッジが表示されるようになる。\n\n 続いて今度は、仮想マシンの設定画面に移ろう。「ネットワークインターフェイス」の欄を見ると、仮想マシンのNICは、先ほど調べた「default」という仮想ネットワークに接続していることが分かるはずだ。ここの「編集」をクリックする。\n\n 仮想ネットワークインターフェイスの設定ダイアログが開く。ここで「インターフェース形式」を「Virtual network」から「Bridge to LAN」に変更しよう。「ソース」は先ほど追加したブリッジ(ここではbridge0)にする。\n\n なお仮想マシンのNICを編集した際、ゲストOS側でNICのデバイス名が変わってしまうことがある。その場合はゲストOS側のネットワークの設定も、適宜変更してほしい。\n\n■ Cockpitでコンテナを管理する\n\n 最近であれば、仮想マシンではなくDockerを使いたい人も多いだろう。そしてもちろん、Cockpitにはコンテナ管理用のプラグインも用意されている。ただしCockpitはRed Hatがスポンサードしている都合もあり、公式にはDockerに対応していない。代わりに対応しているコンテナ実行環境はPodmanだ。とはいえPodmanは、Dockerと大きく使用感が変わるわけではないため、それほど問題にはならないだろう。\n\n CockpitでPodmanを管理するには、「cockpit-podman」パッケージをインストールする。\n\ncockpit-podmanパッケージのインストール。Podman本体も同時にインストールされる\n$ sudo apt install -y cockpit-podman\n\n すると左ペインに「Podman containers」という項目が増え、ここからコンテナの起動や管理が行なえるようになる。\n\n だいぶ長い記事になってしまったので、Podmanについての詳しい説明は省略させてもらうが、仮想マシンとコンテナの両方を、まとめていい感じに管理できそうな雰囲気は感じてもらえるのではないだろうか。\n\n そんなわけで最新のUbuntu 24.04 LTS上でCockpitを使い、仮想マシンとコンテナの運用を試してみたわけだが、筆者の手ごたえとしては「これかなりいいな」であった。冒頭で述べたように、筆者はProxmox VEを長年使っていた。24.04 LTSで家庭内のサーバーをリプレースしたら、余った機材で新しいProxmox VE環境を構築しようと考えていたのだが、現在では予定を変更して、Cockpitを導入しようかなと考えている。まさに「気、変わった。今、変わった」という感じである。\nPC Watch,Ubuntu Japanese Team/日本仮想化技術株式会社 水野源",['https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240316-00000018-imppcw-000-1-view.jpg?exp=10800'],"['https://news.yahoo.co.jp/articles/a1b725902409467d1f83f9e0b2bcd42d6a969b8f/images/000', 'https://pc.watch.impress.co.jp/img/pcw/docs/1576/889/html/ssl_001_o.png.html']"
モバイルの点と線を究めるデュアルディスプレイ（PC Watch）,https://news.yahoo.co.jp/articles/80a57269b0d840d1c087e0beaf6eba8064db14ae,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240316-00000016-imppcw-000-2-view.jpg?exp=10800,2024-03-16T06:08:13+09:00,2024-03-16T11:47:33+09:00,PC Watch,imppcw,PC Watch,4611,"\n写真：PC Watch\nモバイルの現場を点と線で区別して評価するようになって久しい。点としての移動先と、線としての移動中では、モビリティに求められる要素が大きく異なるからだ。今回は、点と線の両立をめざしているであろう画期的なデバイスとしてASUSのZenbook DUO UX8406MAを試してみた。\n\n■ モニター2枚を縦積みレイアウト\n\n Zenbook DUO UX8406MAは、Core Ultra 9 185Hを搭載したPCで、カラバリもなければ、異なる複数のモデルもない。現時点で考えられる最高峰クラスと言えるスペックで構成された単一モデルの一択だ。\n\n メモリは32GB、ストレージは1TBのSSDで、OSはWindows 11 Home。Wi-Fi 6E、そして、HDMI、Thunderbolt 4×2、5GBのUSB Type-Aがインターフェイスとして装備されている。\n\n 特徴的なのがそのディスプレイで、2,880×1,800ドット120Hz(アスペクト比16:10)の14型有機EL光沢ディスプレイ2枚がヒンジで連結され、クラムシェル状に画面を内側にして折り畳めるようになっている。\n\n 折りたたんだ外側にも画面を持つような、二つ折りスマホ的なギミックはない。イメージとしては開いた状態でランドスケープ(横)置きのモニターディスプレイ2枚を縦に積み重ねた状態になる。\n\n 下のディスプレイには無段階で角度が調節できるキックスタンドが装備され、2枚の横画面を縦積み状態で自立させることができる。縦積みだからフットプリントも最小限で済む。カフェの狭いテーブルやカウンターでもなんとかなるだろう。\n\n もちろん、キックスタンドを使わなければベタッと机上に置いたタブレットのようにしても使える。2枚のディスプレイに逆方向で同じ画面を表示させ、対面の相手と操作画面を共有することもできる。ディスプレイはマルチタッチ対応で、さまざまな独自ジェスチャーが定義されている。\n\n■ 折り畳めるタブレットで薄型キーボードをサンドイッチ\n\n つまり、画面2枚が連結されて折り畳めるタブレットというのが、この製品のフォームファクタではあるが、外付けの薄いワイヤレスキーボードが同梱されて、この製品の個性ある特徴性と機動性を高めている。\n\n ちなみに、この原稿の初稿はすべてこのキーボードを使って書いているが、打鍵フィーリングはすこぶるいい。キーボードそのものは薄いだけに机上の固さによる底突き感が指に若干の衝撃を与えるのは仕方がないとしても、タッチパッドを含めてほぼほぼA4サイズというゆとりのあるレイアウトに窮屈さは感じられない。ストロークが浅いなりにも打鍵感は悪くないが、ちょっとうるさく感じるかもしれない。\n\n まず、このキーボードを下のディスプレイの画面に重ねると、両者がポゴピンで有線接続され、キーボードの充電が始まる。画面の上にキーボードを重ねるので、もちろんその下の画面は見えなくなるため、ディスプレイは無効化され、上の画面だけのシングルディスプレイになる。\n\n このキーボード面を机上に置けば、見かけは一枚画面のノーマルなノートPCそのものだ。これなら移動中の不安定な場所で使うのにも問題ない。膝の上に置くラップトップスタイルでの運用もたやすい。\n\n ディスプレイ2枚を使うには、基本的に縦積み状態での利用になる。自立させたディスプレイの前に、Bluetoothでワイヤレス接続されたキーボードを置いて使う。これがデスクトップスタイルだ。\n\n ディスプレイはポートレート(縦)置き2枚の状態でも自立させられる。ただ、両ディスプレイがツライチになるわけではなく段差があるので、ちょっと不格好な印象はある。縦置きにした16:10のディスプレイは使いやすいアスペクト比だけにちょっと残念に感じた。\n\n また、ポート類が下ディスプレイの左右両短辺にしか装備されていないので、縦置きにしたときにはケーブルやプラグが邪魔になる。L型プラグのケーブルを使うなどでなんとかなるが、これもちょっと工夫がほしかったところだ。\n\n■ 一挙両得を欲張っても破綻がない\n\n 14型16:10のディスプレイは、横置き2枚の状態で、画面の実効対角線サイズは19.8型になる。つまり、19.8型のディスプレイを二つ折りにしているような感覚で持ち運べるし、片側にキーボードを装備すれば14型1画面での運用ができる。\n\n 14型16:10というサイズはベゼルを含めてほぼほぼA4サイズ。それを広げれば2倍のA3サイズとなる。もちろん、このディスプレイ内部にはPCとしての機能が実装されている。そういう意味ではまさにA3サイズのタブレットだと考えていい。\n\n Windowsでの表示は200%拡大が推奨となっているが、96dpi相当の表示のためには250%拡大が必要だ。\n\n 19.8型画面のタブレットが約1.35kg、外付けの薄型Bluetoothキーボードが約300g。キーボードを挟み込み、クラムシェルのように閉じれば合計1.65kgとなる。\n\n この重量は、満員電車での通勤やクルマを使わない営業目的の外出などで毎日持ち歩くにはちょっとつらいかもしれない。バックパックに入れてかついでもズシリとした重さを感じる。\n\n でも、23.8型のモニターをスーツケースに入れて出張に出かけていたことを考えれば、機動性ははるかに高い。日常的に手元で愛用しているアイ・オー・データ機器の17.3型フルHDモバイルモニターのLCD-YC171DXは、PCの機能を持たないシンプルなモニターで重宝しているが、その重量が1.1kgであることを考えれば、それよりも大きな画面を確保できるポータブルPCがこの重さで済んですんでいて、しかも、移動中の運用にも支障がないというのは画期的だ。\n\n 移動中の使いやすさに配慮すれば据置時の使い勝手が悪くなったり、あるいは、その逆だったりと、一挙両得というのはなかなか難しいものなのだが、この製品は、そのあたりをうまく解決している点は高く評価できる。\n\n■ ソフトウェアの工夫で合理的なウィンドウレイアウト操作\n\n 複数のディスプレイを使う場合、それらのサイズや解像度が必ずしも同じである必要はないが、同じであったほうが運用は分かりやすく使いやすい。ディスプレイからディスプレイにアプリのウィンドウを移動させるときも、解像度や拡大縮小率が同じであるにこしたことがない。表示先のディスプレイが変わるたびに、ウィンドウのサイズを微調整するのはめんどうだからだ。\n\n その点、この製品なら困る場面がない。2つのディスプレイはサイズも解像度も方向も同じだからだ。Windowsにはスナップレイアウトと呼ばれる機能が実装されていて、ウィンドウ右上、閉じるボタンの左にある最大化ボタン(最大化時には元のサイズに戻すボタン)にマウスポインタをあてると、デスクトップ上のどこにそのウィンドウをレイアウトするかを選択して配置できる。\n\n Zenbook DUO UX8406MAでは、それを拡張するかたちで、ウィンドウのタイトルバーをつかんでドラッグ中に、どのディスプレイに表示するか、そのディスプレイのどこにレイアウトするか、あるいは2枚のディスプレイを連続した1つのディスプレイとみなして最大化するかを指定することができる。\n\n また、マルチタッチ操作ではウィンドウを5本の指で広げるようにスワイプすると、そのウィンドウが両画面の境目を超えて2画面いっぱいに最大化される。\n\n ディスプレイ間でウィンドウを移動するには、ウィンドウのタイトルバーをつかんで投げるようなジェスチャーをすれば別のディスプレイにウィンドウを投げつけることができる。\n\n 実に直感的なジェスチャーで分かりやすいが、ASUS独自のものだけに指が覚えてしまうとほかのPCを使えなくなるかもしれない……。さらに、この製品に3台目のモニターをThunderboltポートにつないでみたが、破綻することなくこの機能を使うことができた。\n\n■ 破綻がないn in 1\n\n 1.65kgという多少の重さを我慢するにせよ、14型×2のマルチモニターを持つポータブルPCを手軽に携行でき、14型×1のノートPCとして使う場合に犠牲になる造作もないというのは画期的だし、よく考えられている。こうしたn in 1のフォームファクタは、たいていどこかで何かが犠牲になり、場合によっては破綻してしまうようなケースも少なくないからだ。\n\n また、画面の折りたたみ構造を採用するのではなく、あえて物理的な2画面に分離することで、薄型のキーボードを挟み込める機構に必要なコストを削減できているのも悪くない方針だ。これを折り曲げ可能なOLEDにすると、そのコストもはねあがり、壊れやすさも高まるに違いない。\n\n 折りたたみ可能な贅沢な1画面にするのか、2画面を組み合わせて実用性を確保するのかは、製品の方向性を決める重要な要素だが、この製品では、そこが潔く決断できている。これでよいのだと思うし、だからこそ、34万9,800円という価格も実現できているのだろう。\n\n ASUSというメーカーは、PCという道具に、どんな機能が求められているのか、どのような提案をすれば歓迎されるのかを知り尽くしているように感じられる。\n\n 製品にはいたるところに創意と工夫がちりばめられている。たとえば電源関連で気がつくのは添付のMyASUSユーティリティで、バッテリケアモードを指定できるところだ。\n\n この機能を有効にしておくとバッテリの充電時、全容量の80%に制限して充電が行なわれ、バッテリの劣化を軽減することができる。充電はUSB PD 65Wで同梱ACアダプタの仕様がこうなっている。\n\n ここまでは各社の製品でもよく見かける機能なのだが、ASUSの製品には加えて「インスタントフル充電モード」という機能が用意されている。この機能をオンにするとバッテリケアモードを無視してバッテリが100%充電される。そして、24時間後にバッテリケアモードが再び有効になるのだ。\n\n この機能はすばらしい。出先でバッテリ運用が厳しいことが予測されるとき、その運用前夜にこの機能をオンにするだけで翌日の安心感が確保できる。日常的にはオフィスやテレワークスペースで据え置き利用し、日常的に電源をつなぎっぱなしで使っているPCを、たまの外出時に携行する場合だけインスタントフル充電モードを使うようにすればバッテリの劣化は最小限に抑制できる。まさに点と線両対応の機能だと言える。\n\n きっとこうしたかゆいところに手が届くような機能がたくさん隠れているのだろう。レビューのために短い期間では気がつかない機能を掘り起こしたくなる。少し手元に置いて使い続けてみたいと感じたPCだった。AI PCとしての実力も気になるところだ。\nPC Watch,山田 祥平",['https://newsatcl-pctr.c.yimg.jp/t/amd-img/20240316-00000016-imppcw-000-2-view.jpg?exp=10800'],['https://news.yahoo.co.jp/articles/80a57269b0d840d1c087e0beaf6eba8064db14ae/images/000']
